<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>531, 17</value>
  </metadata>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>646, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tbstCrypto.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAI5SURBVDhPrZLrS5NhGMb35/Qh+tCnsgOkRERKUR5oDacS
        mqSVBxLLJHW2D2XYcZWrbB6zEZLO0zRRW3nKzGnbFFvqlHTN1XTTmnt/+c4YvFF+iG64vzw81+++r+t5
        ZP+93M45psbNjJv7ed/Xgcn4nGa9lhm7jV9X/l6LC7NMjg3ic9kIeMYQ3H0ITiMuSwWPSy+sQ6ybQ6zD
        JrzOUabHWriWn0rxeSWFmSdw9KqYH8hHlSXfHDDUY0D42k9BhpypjxvTZj5NUHn/CoItl9yUw5sDuhsr
        wNlCduIBycWqe2oESyYZyog/A5a/ueisf0jb0zs0VZfSoCuhXncVfZmaOm0xNZpCKu9eRnfzEuWlF3Et
        zElB7c80LE23wmJXsIUvnQQW2ln73Ip/1kBgvi107hip41ZRuhTQXHNjQ2zJImBOxz+UzGpvPN7uGFZe
        y8GaTWD0LP53p5h4EU3e6aNSQIPuOri6WBtJ48fbk6y8UdBbdRBl3FZe1iWFxKv9Sqz6SHKSo6QA0a/g
        7OD7QBI+03GWOo8QH7OFpIRd6707JPb2xPKhOoLMBGnIMr1WHfTrexWHpyMKd1NEEPa72NMeibk8jDOK
        cCmgVlOE39GIx3iIxcZ9LHcdo/Z2NInxOylT7w+J3YZwhh9sJ02+Vwqo0hQwPahj5NEORp/swd6WyGSz
        IhiY6FlcW5wsig3F20iNDZMCxHctyUtBnaMMtmr9+xaciwumLQYmehbXFieL4hn7uBTw7yWT/QTCqs2p
        epcsRQAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>751, 17</value>
  </metadata>
  <metadata name="messageBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>353, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>81</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADqrGEA0GkAAOGhTwDhnUkA4ZxGAOGd
        RgDgmT8A3IwnANyLJQDciyUA3IslANyKJADfiCMA5ZMnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADjp1wA////AOKhTQDhnEQA4aNUBOGe
        SR3gnEY84JlAVt+UNmXcjCZi3IslT9yLJTbciyUY24kiAtyLJQDbiiQA2I4pANqHIwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//9AA4qBKAOOkUwDgmkAA4qFPE+Ge
        SFjhnUam4ZxG2uGcRfPhnEX84Jg9/9yMJ/7ciyX73Isl79yLJdTciyWd3IslT9uKJA/ciyUA24slANyL
        JQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+cKEANyQLQDioEwA46hbB+Gf
        SVjhnUbF4ZxF+uGcRf/hnEX/4ZxF/+GcRf/gmD7/3Iwn/9yLJf/ciyX/3Isl/9yLJf/ciyX33IslvdyL
        JU7biyUE3IslANuLJQD6oS0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPPCiQDTcAAA4JxHAOOj
        UhrhnkiY4ZxF9uGcRf/hnEX/4ZxF/+GcRf/hnEX/4ZxF/+CYPv/cjCf/3Isl/9yLJf/ciyX/3Isl/9yL
        Jf/ciyX/3Isl8tyLJY3biyUU3IslANyLJQD/pSYAAAAAAAAAAAAAAAAAAAAAAAAAAAD//94A3YwkAOGd
        RgDiolIj4Z1IuOGcRf/hnEX/4ZxF/+GcRf/hnEX/4ZxF/+GcRf/hnEX/4Jg+/9yMJ//ciyX/3Isl/9yL
        Jf/ciyX/3Isl/9yLJf/ciyX/3Isl/9yLJa3ciyUc24slANqKJQAAAAAAAAAAAAAAAAAAAAAAAAAAAOKh
        TgDioU4A5KVWG+GdSLnhnEX/4ZxF/+GcRf/hnEX/4ZxF/+GcRf/hnEX/4ZxF/+GcRf/gmD7/3Iwn/9yL
        Jf/ciyX/3Isl/9yLJf/ciyX/3Isl/9yLJf/ciyX/3Isl/9yLJazbiiQT24olANyKJAAAAAAAAAAAAAAA
        AADtvYEA5KldAOauZwjinkqa4ZxF/+GcRf/hnEX/4ZxF/+GcRf/hnEX/4ZxF/+GcRf/hnEX/4ZxF/+CY
        Pv/cjCf/3Isl/9yLJf/ciyX/3Isl/9yLJf/ciyX/3Isl/9yLJf/ciyX/3Isl/9yLJYvbiSQE3IokAOKP
        JQAAAAAAAAAAAP///wDdkjIA4qFOWeGcRvbhnEX/4ZxF/+GcRf/hnEX/4ZxF/+GcRf/hnEX/4ZxF/+Gc
        Rf/hnEX/4Jg+/9yMJ//ciyX/3Isl/9yLJf/ciyX/3Isl/9yLJf/ciyX/3Isl/9yLJf/ciyX/3Isl8dyL
        JUrciyUA3YomAAAAAADyyZYA46ZXAOSoWxXhnkjH4ZxF/+GcRf/hnEX/4ZxF/+GbQ//hm0L/4ZtC/+Gb
        Qv/hm0L/4ZtC/+GbQ//glzv/3Ioj/9yJIv/ciSL/3Iki/9yJIv/ciSL/3Iki/9yKI//ciyX/3Isl/9yL
        Jf/ciyX/3IsludyKJQ3ciiUA8ZoqAP///wDfljsA4qFOXOGcRvvhnEX/4ZxF/+GcRf/hnkj/5q9q/+i2
        d//otnb/6LZ2/+i2dv/otnb/6LZ3/+ezcf/kqmD/5Klf/+SpX//kqV//5Klf/+SpX//kqV//4qFQ/9yN
        KP/ciyX/3Isl/9yLJf/ciyX23IslTdyLJQDfjCMA57NuAOm5egXinkqq4ZxF/+GcRf/hnEX/4ZtE/+Sl
        V//05tT/+PPs//jy6//48uv/+PLr//jy6//48uv/9/Lq//fw6P/38Of/9/Dn//fw5//38Of/9/Dn//fx
        6f/z4cv/35Y6/9yKJP/ciyX/3Isl/9yLJf/ciyWe2YsjAtuLJADjpVYA5KdZH+GdR93hnEX/4ZxF/+Gc
        Rf/hm0T/5KdZ//Xq2//49e//+PTu//j07v/49O7/+PTu//j07v/49O7/9/Lr//fy6//38uv/9/Lr//fy
        6//38uv/9/Pt//Tm1P/flzz/3Ioj/9yLJf/ciyX/3Isl/9yLJdXbiyUY3IslAOGeSQDjolJB4Z1G9OGc
        Rf/hnEX/4ZxF/+GbRP/kp1n/9era//j17//49O7/+PTu//j07v/49O7/+PTu//j07f/38uv/9/Lr//fy
        6//38uv/9/Lr//fy6//38+3/9ObT/9+XPP/ciiP/3Isl/9yLJf/ciyX/3Isl8NyLJDbciyUA4ZtEAOKh
        T1zhnEb94ZxF/+GcRf/hnEX/4ZtE/+SnWf/16tr/+PXv//j07v/49O7/+PTu//j07v/49O7/+PXv//fz
        7f/38uv/9/Lr//fy6//38uv/9/Lr//fz7f/05tP/35c8/9yKI//ciyX/3Isl/9yLJf/ciyX73IslT9yL
        JQDhnEQA4p9LauGcRf/hnEX/4ZxF/+GcRf/hm0T/5KdZ//Xq2v/49e//+PTu//j07v/49O7/+PXv//j0
        7v/z4sv/8t7E//fy6//38+z/9/Lr//fy6//38uv/9/Pt//Tm0//flzz/3Ioj/9yLJf/ciyX/3Isl/9yL
        Jf7ciyVi3IslAOGcRADin0tq4ZxF/+GcRf/hnEX/4ZxF/+GbRP/kp1n/9era//j17//49O7/+PTu//j1
        8P/27N7/7s2j/+m9hP/ntXX/6sKP//Tn1//38+3/9/Ls//fy6//38+3/9ObT/9+XPP/ciiP/3Isl/9yL
        Jf/ciyX/3Isl/9yLJWXciyUA4ZtEAOKhT1zhnEb94ZxF/+GcRf/hnEX/4ZtE/+SnWf/16tr/+PXv//j1
        8P/38ur/8dm6/+q/if/v0av/9u7j//bt4P/ty6D/57R0/+7Rq//27+X/9/Pt//fz7f/05tP/35c8/9yK
        I//ciyX/3Isl/9yLJf/ciyX83IslVNyLJQDhnkkA46NSQeGdRvXhnEX/4ZxF/+GcRf/hm0T/5KdZ//bq
        2//49fD/9OTQ/+zFk//sx5j/9efV//j18P/49O7/9/Ps//fz7f/z5ND/6r+J/+i6gP/y38b/9/Pt//Tm
        1f/flzz/3Ioj/9yLJf/ciyX/3Isl/9yLJfDciyU33IslAOOlVgDkplkg4Z1H3eGcRf/hnEX/4ZxF/+Gb
        RP/kp1n/8+LM/+7QqP/rwY3/8t3C//jz7P/49fD/+PTu//j07f/38uv/9/Lr//fz7f/38en/8Ni5/+i3
        ev/sx5j/8dzB/9+XPP/ciiT/3Isl/9yLJf/ciyX/3Isl1tyLJBjciyQA6LFtAOq2eAbinkmr4ZxF/+Gc
        Rf/hnEX/4ZxF/+KfS//ot3r/79Gq//bt4P/49O3/+PPr//jy6//48uv/9/Lq//fw6P/38Of/9/Dn//fw
        6P/38er/9erc/+zKnf/kq2P/3Y4s/9yLJf/ciyX/3Isl/9yLJf/ciyWf2oslAtyLJQD///8A35Y7AOKh
        TlzhnEb74ZxF/+GcRf/hnEX/4ZxE/+SoXP/ot3j/6LZ3/+i2d//otnf/6LZ3/+i2d//ns3H/5Kpg/+Sp
        X//kqV//5Klf/+SpX//kqmD/5Kph/+CZQf/ciyT/3Isl/9yLJf/ciyX/3Isl+NyLJFHciyUA4o8iAPPJ
        kgDjpVcA5KdcFuGdSMfhnEX/4ZxF/+GcRf/hnEX/4ZtE/+GbQv/hm0L/4ZtC/+GbQv/hm0L/4ZtD/+CX
        O//ciiP/3Iki/9yJIv/ciSL/3Iki/9yJIv/ciSL/3Ioj/9yLJf/ciyX/3Isl/9yLJf/ciyW/3IokENyK
        JADslikAAAAAAP///wDdkTIA4qBOWuGcRvfhnEX/4ZxF/+GcRf/hnEX/4ZxF/+GcRf/hnEX/4ZxF/+Gc
        Rf/hnEX/4Jg+/9yMJ//ciyX/3Isl/9yLJf/ciyX/3Isl/9yLJf/ciyX/3Isl/9yLJf/ciyX/3Isl9NyL
        JVHciyUA34wmAAAAAAAAAAAA7bp+AOSoXQDmrmgI4p5Km+GcRf/hnEX/4ZxF/+GcRf/hnEX/4ZxF/+Gc
        Rf/hnEX/4ZxF/+GcRf/gmD7/3Iwn/9yLJf/ciyX/3Isl/9yLJf/ciyX/3Isl/9yLJf/ciyX/3Isl/9yL
        Jf/ciyWR3YokBdyKJADgjSUAAAAAAAAAAAAAAAAA4Z9MAOKgTQDkpVUb4Z5IuuGcRf/hnEX/4ZxF/+Gc
        Rf/hnEX/4ZxF/+GcRf/hnEX/4ZxF/+CYPv/cjCf/3Isl/9yLJf/ciyX/3Isl/9yLJf/ciyX/3Isl/9yL
        Jf/ciyX/3IslstuLJBbciiUA3IolAAAAAAAAAAAAAAAAAAAAAAD//9sA3IgeAOGcRgDiolIk4Z1IueGc
        Rf/hnEX/4ZxF/+GcRf/hnEX/4ZxF/+GcRf/hnEX/4Jg+/9yMJ//ciyX/3Isl/9yLJf/ciyX/3Isl/9yL
        Jf/ciyX/3Isl/9yLJbPciiUf3IslANyLJQD//+UAAAAAAAAAAAAAAAAAAAAAAAAAAAD1xooAz2UAAOGc
        RgDjo1Ib4Z1JmuGcRvbhnEX/4ZxF/+GcRf/hnEX/4ZxF/+GcRf/gmD7/3Iwn/9yLJf/ciyX/3Isl/9yL
        Jf/ciyX/3Isl/9yLJfXciyWU3IslF9yLJQDdiyUA7JgqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD0w4UA3o0qAOKfTADjplsI4Z5KWeGdR8bhnEX64ZxF/+GcRf/hnEX/4ZxF/+CYPv/cjCf/3Isl/9yL
        Jf/ciyX/3Isl/9yLJfnciyXC3IslVNuKJQbciyUA3IslAO6XKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD//8AA4J5LAOKjVADgmD4A4qBPFOGdSFrhnEao4ZxF2+GcRfThnEX94Jg+/9yM
        J//ciyX83Isl89yLJdrciyWl3IslVtuLJRLbiiUA24olANyKJQD//24AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4aZeAP///wDin00A4ZtEAOKhUQXhnUge4Z1GPuGd
        RlngmD1o3IwnZtyLJVfbiyU83IskHNyJJATciyUA24olANCENQDZiSMAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOGnWgC5FwAA4qBOAOGd
        SADhnEYA4ZxFAOCYPgDcjCcA3IslANuLJQDciyQA3IokANyMHADWhiUAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4AAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAgAAAAAD+AAfw=
</value>
  </data>
</root>